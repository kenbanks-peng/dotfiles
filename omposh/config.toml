"$schema" = "https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json"
version = 3
final_space = true

[var]
  myshell = "zsh"

[palette]
  red = "#a90000"    # oklch(45% 0.200 30) 
  gold = "#a17a00"   # oklch(60% 0.200 90) - lighter
  green = "#006b1d"  # oklch(45% 0.200 150)
  teal = "#005b95"   # oklch(45% 0.200 240)
  blue = "#2f40c2"   # oklch(45% 0.200 270)
  purple = "#6928b0" # oklch(45% 0.200 300)
  pink = "#8c0888"   # oklch(45% 0.200 330)
  orange = "#f55c1b" # fallback
  on_red = "#f4e4e5"
  on_gold = "#ede9e5"
  on_green = "#e5ece6"
  on_teal = "#e5eaf0"
  on_blue = "#e5e6f2"
  on_purple = "#e8e3ee"
  on_pink = "#ebe2eb"
  base = "#1e1e2e"
  
  # rust, go, zig, lua, python...
  language = "#005b95"
  on_language = "#e5eaf0"

[transient_prompt]
  template = '<p:teal,transparent></><p:on_teal,p:teal>   </><p:teal,transparent></> '
  foreground = 'p:teal'
  background = 'transparent'
  newline = true

[secondary_prompt]
  template = '<p:red,transparent></><,p:gold> > </><p:gold,transparent></> '
  foreground = 'p:red'
  background = 'transparent'

[[blocks]]
  type = 'prompt'
  alignment = 'left'
  newline = true

  ######### SHELL #########

  [[blocks.segments]]
    type = 'command'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:teal'
    foreground = 'p:on_teal'
    template = '{{ if eq .Shell "zsh" }} {{ .Shell }} {{ end }} {{ .Output }} '

    [blocks.segments.properties]
      command = '~/.config/omposh/shell_icon {{ .Shell }}'
      cache = { duration = '1h', strategy = 'folder' }
    
  ######### DIRECTORY #########

  [[blocks.segments]]
    type = 'command'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:blue'
    foreground = 'p:on_blue'
    template = ' {{ .Output }} '

    [blocks.segments.properties]
      command = '~/.config/omposh/directory'
      cache = { duration = '1h', strategy = 'folder' }
  
  ######### LANGUAGES #########

  [[blocks.segments]]
    type = 'python'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:language'
    foreground = 'p:on_language'
    template = '  {{ .Full }} '

    [blocks.segments.properties]
      display_mode = 'context'

  [[blocks.segments]]
    type = 'go'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:language'
    foreground = 'p:on_language'
    template = ' go {{ .Full }} '

    [blocks.segments.properties]
      display_mode = 'context'

  [[blocks.segments]]
    type = 'lua'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:language'
    foreground = 'p:on_language'
    template = '  {{ .Full }} '

    [blocks.segments.properties]
      display_mode = 'context'

  [[blocks.segments]]
    type = 'zig'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:language'
    foreground = 'p:on_language'
    template = '  {{ .Full }} '

    [blocks.segments.properties]
      display_mode = 'context'

  [[blocks.segments]]
    type = 'rust'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:language'
    foreground = 'p:on_language'
    template = '  {{ .Full }} '

    [blocks.segments.properties]
      display_mode = 'context'

  # javascript: deno, svelte, react, node
  [[blocks.segments]]
    type = 'command'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:language'
    foreground = 'p:on_language'
    template = ' {{ .Output }} '
    
    [blocks.segments.properties]
      command = '~/.config/omposh/jsenv'
      cache = { duration = '1h', strategy = 'folder' }
    
  ######### GIT #########

  [[blocks.segments]]
    type = 'git'
    style = 'diamond'
    leading_diamond = ''
    trailing_diamond = ''
    background = 'p:green'
    foreground = 'p:on_green'
    template = ' {{ .HEAD }}{{ if .Working.Changed }} 󱩽{{ end }}{{ if gt .Ahead 0 }} {{ .Ahead }}{{ end }}{{ if gt .Behind 0 }} {{ .Behind }}{{ end }}{{ if and (not .Working.Changed) (eq .Ahead 0) (eq .Behind 0) }} {{ end }} '
    background_templates = [
      '{{ if .Working.Changed }}p:gold{{ end }}',
      '{{ if or (gt .Ahead 0) (gt .Behind 0) }}p:pink{{ end }}',
    ]

    [blocks.segments.properties]
      fetch_status = true
      source = 'cli'
      
  ######### STATUS ENDCAP #########

  [[blocks.segments]]
    type = 'status'
    style = 'accordion'
    leading_powerline_symbol = '<transparent,background></>'
    powerline_symbol = ''
    background = 'p:teal'
    foreground = 'p:on_teal'
    template = '    '
    
    background_templates = ['{{ if gt .Code 0 }}p:red{{ end }}']

    [blocks.segments.properties]
      always_enabled = true

[[blocks]]
  type = 'prompt'
  alignment = 'right'

  [[tooltips]]
    leading_diamond = ''
    trailing_diamond = ''
    template = '  {{ .Profile }}{{ if .Region }}@{{ .Region }}{{ end }} '
    foreground = 'p:white'
    background = 'p:orange'
    type = 'aws'
    style = 'diamond'
    tips = ['aws']

  [tooltips.properties]
    display_default = true

  [[tooltips]]
    leading_diamond = ''
    trailing_diamond = ''
    template = '  {{ .Name }} '
    foreground = 'p:white'
    background = 'p:blue'
    type = 'az'
    style = 'diamond'
    tips = ['az']

    [tooltips.properties]
      display_default = true
    

######### NEW_LINE - SHELL LEVEL PROMPT #########

[[blocks]]
  type = 'prompt'
  alignment = 'left'
  newline = true

  [[blocks.segments]]
    type = 'text'
    style = 'plain'
    background = 'transparent'
    foreground = 'p:orange'
    template = '{{ repeat .SHLVL "❯" }}'
